XCOMM
XCOMM $Id: Project.tmpl,v 1.6.2.2 1999/03/23 10:07:26 nakanisi Exp $
XCOMM

XCOMM FreeWnn is a network-extensible Kana-to-Kanji conversion system.
XCOMM This file is part of FreeWnn.
XCOMM 
XCOMM Copyright Kyoto University Research Institute for Mathematical Sciences
XCOMM                 1987, 1988, 1989, 1990, 1991, 1992
XCOMM Copyright OMRON Corporation. 1987, 1988, 1989, 1990, 1991, 1992, 1999
XCOMM Copyright ASTEC, Inc. 1987, 1988, 1989, 1990, 1991, 1992
XCOMM
XCOMM Author: OMRON SOFTWARE Co., Ltd. <freewnn@rd.kyoto.omronsoft.co.jp>
XCOMM
XCOMM This program is free software; you can redistribute it and/or modify
XCOMM it under the terms of the GNU General Public License as published by
XCOMM the Free Software Foundation; either version 2, or (at your option)
XCOMM any later version.
XCOMM
XCOMM This program is distributed in the hope that it will be useful,
XCOMM but WITHOUT ANY WARRANTY; without even the implied warranty of
XCOMM MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
XCOMM GNU General Public License for more details.
XCOMM
XCOMM You should have received a copy of the GNU General Public License
XCOMM along with GNU Emacs; see the file COPYING.  If not, write to the
XCOMM Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
XCOMM
XCOMM Commentary:
XCOMM
XCOMM Change log:
XCOMM	片山＠ＰＦＵ <kate@pfu.co.jp>
XCOMM		for 文の変数名の訂正。dirs というディレクトリーをソースディレクトリーに作ってしまう。
XCOMM		makefile.R5inst 対応。
XCOMM		kWnn をデフォールトで make するようにする。
XCOMM		JWNNLANG、CWNNLANG、KWNNLANG、TWNNLANG、LWNNLANG を定義。
XCOMM
XCOMM Last modified date: 20,Mar.1999
XCOMM
XCOMM -------------------------------------------------------------------------
XCOMM X Window System Build Parameters
XCOMM $XConsortium: Project.tmpl,v 1.157 93/06/24 10:51:47 dpw Exp $

/*****************************************************************************
 *                                                                           *
 *                            DEFAULT DEFINITONS                             *
 *                                                                           *
 * The following section contains defaults for things that can be overridden *
 * in the various *.cf and site.def files.  DO NOT EDIT!                     *
 *                                                                           *
 ****************************************************************************/

#define ProjectX		5	/* do *not* change this line */

/*
 * X-specific things
 */
#ifndef BuildServer
#define BuildServer		YES
#endif
#ifndef BuildFontServer
#define BuildFontServer		BuildServer
#endif
#ifndef BuildFonts
#define BuildFonts		(BuildServer | BuildFontServer)
#endif
#ifndef BuildPex
#define BuildPex		YES
#endif
#ifndef BuildPexClients
#define BuildPexClients		BuildPex
#endif
#ifndef BuildPexExt
#if BuildServer
#define BuildPexExt		BuildPex
#else
#define BuildPexExt		NO
#endif
#endif
#ifndef BuildXInputExt
#define BuildXInputExt		NO
#endif
#ifndef BuildXInputLib
#define BuildXInputLib		YES
#endif
#ifndef BuildXIE
#define BuildXIE		NO
#endif
#ifndef BuildXTrapExt
#define BuildXTrapExt		NO
#endif
#ifndef BuildXTrapLib
#define BuildXTrapLib		NO
#endif
#ifndef BuildScreenSaverExt
#define BuildScreenSaverExt	NO	/* not released yet */
#endif
#ifndef BuildScreenSaverLib
#define BuildScreenSaverLib	NO	/* not released yet */
#endif
#ifndef InstallLibManPages
#define InstallLibManPages	YES
#endif
#ifndef InstallXtermSetUID
#define InstallXtermSetUID	YES	/* xterm needs to be set uid */
#endif
#ifndef InstallXinitConfig
#define InstallXinitConfig	NO	/* install sample xinit config */
#endif
#ifndef InstallXdmConfig
#define InstallXdmConfig	NO	/* install sample xdm config */
#endif
#ifndef XdmServersType			/* what Xservers files to use */
#if BuildServer
#define XdmServersType ws
#else
#define XdmServersType fs
#endif
#endif
#ifndef InstallFSConfig
#define InstallFSConfig		NO	/* install sample fs config */
#endif
#ifndef InstallAppDefFiles
#define InstallAppDefFiles	YES	/* install application defaults */
#endif
#ifndef DebugLibX
#define DebugLibX		NO	/* debugged X library */
#endif
#ifndef DebugLibXArchive
#define DebugLibXArchive	NO	/* archive file of above */
#endif
#ifndef ProfileLibX
#define ProfileLibX		NO	/* profiled X library */
#endif
#ifndef ProfileLibXArchive
#define ProfileLibXArchive	NO	/* archive file of above */
#endif
#ifndef DebugOldLibX
#define DebugOldLibX		NO	/* debugged old X library */
#endif
#ifndef ProfileOldLibX
#define ProfileOldLibX		NO	/* profiled old X library */
#endif
#ifndef DebugLibXt
#define DebugLibXt		NO	/* debugged toolkit library */
#endif
#ifndef ProfileLibXt
#define ProfileLibXt		NO	/* profiled toolkit library */
#endif
#ifndef DebugLibXaw
#define DebugLibXaw		NO	/* debugged widget library */
#endif
#ifndef ProfileLibXaw
#define ProfileLibXaw		NO	/* profiled widget library */
#endif
#ifndef DebugLibXext
#define DebugLibXext		NO	/* debugged Xext library */
#endif
#ifndef ProfileLibXext
#define ProfileLibXext		NO	/* profiled Xext library */
#endif
#ifndef DebugLibXmu
#define DebugLibXmu		NO	/* debugged Xmu library */
#endif
#ifndef ProfileLibXmu
#define ProfileLibXmu		NO	/* profiled Xmu library */
#endif
#ifndef DebugLibXau
#define DebugLibXau		NO	/* debugged auth library */
#endif
#ifndef ProfileLibXau
#define ProfileLibXau		NO	/* profiled auth library */
#endif
#ifndef DebugLibXdmcp
#define DebugLibXdmcp		NO	/* debugged XDMCP library */
#endif
#ifndef ProfileLibXdmcp
#define ProfileLibXdmcp		NO	/* profiled XDMCP library */
#endif
#ifndef DebugLibXinput
#define DebugLibXinput		NO	/* debugged Xi library */
#endif
#ifndef ProfileLibXinput
#define ProfileLibXinput	NO	/* profiled Xi library */
#endif
#ifndef DebugLibXTest
#define DebugLibXTest		NO	/* debugged Xtst library */
#endif
#ifndef ProfileLibXTest
#define ProfileLibXTest		NO	/* profiled Xtst library */
#endif
#ifndef DebugLibXTrap
#define DebugLibXTrap		NO	/* debugged XTrap library */
#endif
#ifndef ProfileLibXTrap
#define ProfileLibXTrap		NO	/* profiled XTrap library */
#endif
#ifndef DebugLibPex
#define DebugLibPex		NO	/* debugged PEX5 library */
#endif
#ifndef ProfileLibPex
#define ProfileLibPex		NO	/* profiled PEX5 library */
#endif

#ifdef uniosu
#ifdef ManDirectoryRoot
#undef ManDirectoryRoot
#endif
#define ManDirectoryRoot	/usr/catman/w_man
#endif

#ifndef ManDirectoryRoot
#ifdef ProjectRoot
#define ManDirectoryRoot Concat(ProjectRoot,/man)
#ifndef XmanLocalSearchPath
#define XmanLocalSearchPath ManDirectoryRoot
#endif
#else
#if SystemV4
#define ManDirectoryRoot /usr/share/man
#else
#define ManDirectoryRoot /usr/man
#endif
#endif
#endif
#ifndef ManSuffix
#define ManSuffix	n		/* use just one tab or cpp will die */
#endif
#ifndef LibManSuffix
#define LibManSuffix	3		/* use just one tab or cpp will die */
#endif
#ifndef HasXdmAuth
#define HasXdmAuth		NO	/* if you can not use XDM-AUTH* */
#endif
#ifndef BDFTOSNFFILT
#define BDFTOSNFFILT -DBDFTOSNFFILT=\"$(BINDIR)/bdftosnf\"
#endif
#ifndef SHELLPATH
#define SHELLPATH -DSHELLPATH=\"/bin/sh\"
#endif
#ifndef ZBDFTOSNFFILT
#define ZBDFTOSNFFILT -DZBDFTOSNFFILT=\"UNCOMPRESSPATH" | $(BINDIR)/bdftosnf $(FONTCFLAGS)\""
#endif
#ifndef FontFilters
#define FontFilters BDFTOSNFFILT SHELLPATH ZBDFTOSNFFILT
#endif
#ifndef PrimaryScreenResolution
#define PrimaryScreenResolution 72		/* a common resolution */
#endif
#ifndef DefaultFontPath
#if PrimaryScreenResolution < 88		/* (75 + 100) / 2 */
#define DefaultFontPath $(FONTDIR)/misc/,$(FONTDIR)/Speedo/,$(FONTDIR)/Type1/,$(FONTDIR)/75dpi/,$(FONTDIR)/100dpi/
#else
#define DefaultFontPath $(FONTDIR)/misc/,$(FONTDIR)/Speedo/,$(FONTDIR)/Type1/,$(FONTDIR)/100dpi/,$(FONTDIR)/75dpi/
#endif
#endif
#ifndef DefaultRGBDatabase
#define DefaultRGBDatabase $(LIBDIR)/rgb
#endif
#ifndef FontCompilerFlags
#define FontCompilerFlags -t
#endif
#ifndef ConnectionFlags
#if (SystemV || SystemV4) && !HasSockets
#define ConnectionFlags -DSTREAMSCONN
#else
#define ConnectionFlags -DTCPCONN -DUNIXCONN
#endif
#endif
#ifndef FontOSDefines
#define FontOSDefines /**/
#endif
#ifndef FontDefines
#define FontDefines -DFONT_SNF -DFONT_BDF -DFONT_PCF -DCOMPRESSED_FONTS FontOSDefines
#endif
#ifndef ExtensionOSDefines
#define ExtensionOSDefines /**/
#endif
#ifndef ExtensionDefines
#ifndef PexDefines
#if BuildPexExt
#define PexDefines -DPEXEXT
#else
#define PexDefines /**/
#endif
#endif
#ifndef ShmDefines
#if HasShm
#define ShmDefines -DMITSHM
#else
#define ShmDefines /**/
#endif
#endif
#ifndef XInputDefines
#if BuildXInputExt
#define XInputDefines -DXINPUT
#else
#define XInputDefines /**/
#endif
#endif
#ifndef XTrapDefines
#if BuildXTrapExt
#define XTrapDefines -DXTRAP
#else
#define XTrapDefines /**/
#endif
#endif
#ifndef ScreenSaverDefines
#if BuildScreenSaverExt
#define ScreenSaverDefines -DSCREENSAVER
#else
#define ScreenSaverDefines /**/
#endif
#endif
#ifndef XIEdefines
#if BuildXIE
#define XIEdefines -DXIE
#else
#define XIEdefines /**/
#endif
#endif
#ifndef BaseExtensionDefines
#define BaseExtensionDefines -DSHAPE -DMULTIBUFFER -DMITMISC -DXTEST -DBIGREQS PexDefines ShmDefines XInputDefines XTrapDefines ScreenSaverDefines XIEdefines
#endif
#define ExtensionDefines BaseExtensionDefines ExtensionOSDefines
#endif
#ifndef ServerExtraDefines
#define ServerExtraDefines -DXDMCP -DPIXPRIV
#endif
#ifndef ServerOSDefines
#define ServerOSDefines /**/
#endif
#ifndef ServerDefines
#define ServerDefines StandardDefines ServerExtraDefines ExtensionDefines ServerOSDefines
#endif
#ifndef PexDipexDefines
#define PexDipexDefines /**/
#endif
#ifndef PexDdpexDefines
#define PexDdpexDefines /**/
#endif
#ifndef PexPhigsDefines
#ifndef PexShmIPC
#define PexShmIPC HasShm
#endif
#if PexShmIPC
#define PexPhigsDefines /**/
#else
#define PexPhigsDefines -DPEX_API_SOCKET_IPC
#endif
#endif
#ifndef PexClientDefines
#define PexClientDefines -DPEX_SI_PHIGS
#endif
#ifndef PhigsInclude
#ifdef UseInstalled
#define PhigsInclude -I$(INCDIR)
#else
#define PhigsInclude -I$(BUILDINCDIR)
#endif
#endif
#ifndef PexCDebugFlags
#define PexCDebugFlags DebuggableCDebugFlags
#endif
#ifndef PexCCOptions
#ifdef LibraryCCOptions
#define PexCCOptions LibraryCCOptions
#else
#define PexCCOptions DefaultCCOptions
#endif
#endif
#ifndef DefaultFSConfigFile
#define DefaultFSConfigFile $(LIBDIR)/fs/config
#endif
#ifndef BinDir
#ifdef ProjectRoot
#define BinDir Concat(ProjectRoot,/bin)
#else
#define BinDir /usr/bin/X11
#endif
#endif
#ifndef BuildIncRoot
#define BuildIncRoot $(TOP)
#endif
#ifndef BuildIncTop
#define BuildIncTop ..		/* relative to $(TOP)/X11 */
#endif
#ifndef LibDir
#define LibDir $(USRLIBDIR)/X11
#endif
#ifndef ConfigDir
#define ConfigDir $(LIBDIR)/config
#endif
#ifndef LintlibDir
#define LintlibDir $(USRLIBDIR)/lint
#endif
#ifndef FontDir
#define FontDir $(LIBDIR)/fonts
#endif
#ifndef AdmDir
#define AdmDir /usr/adm
#endif
#ifndef XinitDir
#define XinitDir $(LIBDIR)/xinit
#endif
#ifndef XdmDir
#define XdmDir $(LIBDIR)/xdm
#endif
#ifndef XdmConfigurationSubdirectory		/* under xdm sources */
#define XdmConfigurationSubdirectory config
#endif
#ifndef TwmDir
#define TwmDir $(LIBDIR)/twm
#endif
#ifndef ManPath
#define ManPath ManDirectoryRoot
#endif
#ifndef ManSourcePath
#define ManSourcePath $(MANPATH)/man
#endif
#ifndef ManDir
#define ManDir $(MANSOURCEPATH)$(MANSUFFIX)
#endif
#ifndef LibmanDir
#define LibmanDir $(MANSOURCEPATH)$(LIBMANSUFFIX)
#endif
#ifndef NlsDir
#define NlsDir $(LIBDIR)/nls
#endif
#ifndef PexApiDir
#define PexApiDir $(LIBDIR)/PEX
#endif
#ifndef XFileSearchPathBase
/* avoid SCCS keyword */
#define XFileSearchPathBase Concat4($(LIBDIR)/%L/%T/%N%C,%S:$(LIBDIR)/%l/%T/%N%C,%S:$(LIBDIR)/%T/%N%C,%S:$(LIBDIR)/%L/%T/%N%S:$(LIBDIR)/%l/%T/%N%S:$(LIBDIR)/%T/%N%S)
#endif
#ifndef XFileSearchPathDefault
#ifdef XAppLoadDir
/* avoid SCCS keyword */
#define XFileSearchPathDefault XAppLoadDir/Concat(%N%C,%S):XAppLoadDir/%N%S:XFileSearchPathBase
#else
#define XFileSearchPathDefault XFileSearchPathBase
#endif
#endif
#ifndef XAppLoadDir
#define XAppLoadDir $(LIBDIR)/app-defaults
#endif
#ifndef XtErrorPrefix
#define XtErrorPrefix /* as empty string */
#endif
#ifndef XtExtraDefines
#define XtExtraDefines /* as empty string */
#endif
#ifndef XtWarningPrefix
#define XtWarningPrefix /* as empty string */
#endif
#ifndef OsNameDefines
#define OsNameDefines /* as nothing */
#endif
#ifndef DefaultUserPath			/* for xdm */
#define DefaultUserPath :/bin:/usr/bin:$(BINDIR):/usr/ucb
#endif
#ifndef DefaultSystemPath		/* for xdm */
#define DefaultSystemPath /etc:/bin:/usr/bin:$(BINDIR):/usr/ucb
#endif
#ifndef DefaultSystemShell		/* for xdm to set in SHELL */
#define DefaultSystemShell BourneShell
#endif
#ifndef UseCCMakeDepend			/* use slow cc -E script */
#define UseCCMakeDepend NO
#endif
#ifndef DependDir
#if UseCCMakeDepend
#define DependDir $(SCRIPTSRC)
#else
#define DependDir $(UTILSRC)/makedepend
#endif
#endif
#ifndef ContribDir
#define ContribDir $(TOP)/../contrib	/* contrib is outside core tree */
#endif
#ifndef DependCmd
#define DependCmd $(DEPENDSRC)/makedepend
#endif
#ifndef RemoveTargetProgramByMoving
#define RemoveTargetProgramByMoving NO
#endif
#ifndef AllocateLocalDefines
#define AllocateLocalDefines /**/
#endif

#ifndef ForceNormalLib
#define ForceNormalLib (HasSaberC | HasGcc)
#endif
#ifndef SharedLibX
#define SharedLibX HasSharedLibraries
#endif
#ifndef NormalLibX
#define NormalLibX (!SharedLibX | ForceNormalLib)
#endif
#ifndef SharedOldLibX
#define SharedOldLibX HasSharedLibraries
#endif
#ifndef NormalOldLibX
#define NormalOldLibX (!SharedOldLibX | ForceNormalLib)
#endif
#ifndef SharedLibXt
#define SharedLibXt HasSharedLibraries
#endif
#ifndef NormalLibXt
#define NormalLibXt (!SharedLibXt | ForceNormalLib)
#endif
#ifndef SharedLibXaw
#define SharedLibXaw HasSharedLibraries
#endif
#ifndef NormalLibXaw
#define NormalLibXaw (!SharedLibXaw | ForceNormalLib)
#endif
#ifndef SharedLibXmu
#define SharedLibXmu HasSharedLibraries
#endif
#ifndef NormalLibXmu
#define NormalLibXmu (!SharedLibXmu | ForceNormalLib)
#endif
#ifndef SharedLibXau
#define SharedLibXau NO		/* don't need shared form */
#endif
#ifndef NormalLibXau
#define NormalLibXau (!SharedLibXau | ForceNormalLib)
#endif
#ifndef SharedLibXdmcp
#define SharedLibXdmcp NO	/* don't need shared form */
#endif
#ifndef NormalLibXdmcp
#define NormalLibXdmcp (!SharedLibXdmcp | ForceNormalLib)
#endif
#ifndef SharedLibXext
#define SharedLibXext HasSharedLibraries
#endif
#ifndef NormalLibXext
#define NormalLibXext (!SharedLibXext | ForceNormalLib)
#endif
#ifndef SharedLibXinput
#define SharedLibXinput HasSharedLibraries
#endif
#ifndef NormalLibXinput
#define NormalLibXinput (!SharedLibXinput | ForceNormalLib)
#endif
#ifndef SharedLibXTest
#define SharedLibXTest HasSharedLibraries
#endif
#ifndef NormalLibXTest
#define NormalLibXTest (!SharedLibXTest | ForceNormalLib)
#endif
#ifndef SharedLibXTrap
#define SharedLibXTrap 	HasSharedLibaries
#endif
#ifndef NormalLibXTrap
#define NormalLibXTrap 	(!SharedLibXTrap | ForceNormalLib)
#endif
#ifndef SharedLibPex
#define SharedLibPex HasSharedLibraries
#endif
#ifndef NormalLibPex
#define NormalLibPex (!SharedLibPex | ForceNormalLib)
#endif
#ifndef SharedLibPhigs
#define SharedLibPhigs NO	/* XXX - haven't made it sharable yet */
#endif
#ifndef NormalLibPhigs
#define NormalLibPhigs (!SharedLibPhigs | ForceNormalLib)
#endif


#ifndef DoInstallExtensionsIntoXlib
#define DoInstallExtensionsIntoXlib NO	/* merge libXext.a into libX11.a */
#endif

XCOMM -------------------------------------------------------------------------
XCOMM X Window System make variables; this need to be coordinated with rules

/*
 * This list must be reflected in the DIRS_TO_BUILD list in the top-level
 * Makefile.
 */
          PATHSEP = /			/* for building filenames */
        USRLIBDIR = UsrLibDir		/* nonshared libraries */
         SHLIBDIR = ShLibDir            /* shared libraries */
           BINDIR = BinDir		/* programs */
          INCROOT = IncRoot		/* base of where to put header files */
     BUILDINCROOT = BuildIncRoot	/* base of build loc */
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = BuildIncTop		/* top relative to BUILDINCDIR */
           INCDIR = $(INCROOT)/X11	/* header files, must end in X11 */
           ADMDIR = AdmDir		/* server log files */
           LIBDIR = LibDir		/* rgb, XErrorDB, etc. */
        CONFIGDIR = ConfigDir		/* build configuration information */
       LINTLIBDIR = LintlibDir		/* lint libraries */

          FONTDIR = FontDir		/* font directories */
         XINITDIR = XinitDir		/* xinit config files */
           XDMDIR = XdmDir		/* xdm config files */
           TWMDIR = TwmDir		/* twm config files */
          MANPATH = ManPath		/* top of manual page tree */
    MANSOURCEPATH = ManSourcePath	/* prefix for man page sources */
        MANSUFFIX = ManSuffix		/* suffix for man pages */
     LIBMANSUFFIX = LibManSuffix	/* suffix for library man pages */
           MANDIR = ManDir		/* man pages for commands */
        LIBMANDIR = LibmanDir		/* man pages for library routines */
           NLSDIR = NlsDir		/* nls files */
        PEXAPIDIR = PexApiDir		/* PEX support files */
      XAPPLOADDIR = XAppLoadDir		/* application default resource dir */
       FONTCFLAGS = FontCompilerFlags

     INSTAPPFLAGS = $(INSTDATFLAGS)	/* XXX - this should go away - XXX */

#ifdef UseInstalled
            IMAKE = imake		/* assume BINDIR in path */
           DEPEND = makedepend		/* assume BINDIR in path */
              RGB = rgb			/* assume BINDIR in path */
#ifdef SnfFonts
            FONTC = bdftosnf		/* assume BINDIR in path */
#else
            FONTC = bdftopcf		/* assume BINDIR in path */
#endif
        MKFONTDIR = mkfontdir		/* assume BINDIR in path */
        MKDIRHIER = BourneShell $(BINDIR)/mkdirhier
#else
            IMAKE = $(IMAKESRC)/imake
           DEPEND = DependCmd
              RGB = $(RGBSRC)/rgb
#ifdef SnfFonts
            FONTC = $(BDFTOSNFSRC)/bdftosnf
#else
            FONTC = $(BDFTOPCFSRC)/bdftopcf
#endif
        MKFONTDIR = $(MKFONTDIRSRC)/mkfontdir
        MKDIRHIER = BourneShell $(SCRIPTSRC)/mkdirhier.sh
#endif

        CONFIGSRC = $(TOP)/config
       DOCUTILSRC = $(TOP)/doc/util
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = ContribDir
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = DependDir
         IMAKESRC = $(CONFIGSRC)
         XAUTHSRC = $(LIBSRC)/Xau
          XLIBSRC = $(LIBSRC)/X
           XMUSRC = $(LIBSRC)/Xmu
       TOOLKITSRC = $(LIBSRC)/Xt
       AWIDGETSRC = $(LIBSRC)/Xaw
       OLDXLIBSRC = $(LIBSRC)/oldX
      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
#ifdef SnfFonts
      BDFTOSNFSRC = $(FONTSRC)/clients/bdftosnf
#else
      BDFTOPCFSRC = $(FONTSRC)/clients/bdftopcf
#endif
     MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
         FSLIBSRC = $(FONTSRC)/lib/fs
    FONTSERVERSRC = $(FONTSRC)/server
     EXTENSIONSRC = $(TOP)/extensions
         XILIBSRC = $(EXTENSIONSRC)/lib/xinput
      XTESTLIBSRC = $(EXTENSIONSRC)/lib/xtest
        PEXLIBSRC = $(EXTENSIONSRC)/lib/PEXlib
      PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX

/*
 * _Use - makes a choice based on UseInstalled.
 */
#ifndef _Use
#ifdef UseInstalled
#define _Use(a,b) a
#else
#define _Use(a,b) b
#endif
#endif

/*
 * _UseCat - combination of _Use and Concat.
 *           exists to avoid problems with some preprocessors
 */
#ifndef _UseCat
#if (__STDC__ && !defined(UnixCpp)) || defined(AnsiCpp)
#ifdef UseInstalled
#define _UseCat(a,b,c) a##c
#else
#define _UseCat(a,b,c) b##c
#endif
#else
#ifdef UseInstalled
#define _UseCat(a,b,c) a/**/c
#else
#define _UseCat(a,b,c) b/**/c
#endif
#endif
#endif

#ifndef ShLibIncludeFile
/* need this to make ANSI-style preprocessors happy */
#define ShLibIncludeFile <noop.rules>
#endif

#include ShLibIncludeFile

#if HasSharedLibraries
        SOXLIBREV = SharedXlibRev
          SOXTREV = SharedXtRev
         SOXAWREV = SharedXawRev
        SOOLDXREV = SharedOldXRev
         SOXMUREV = SharedXmuRev
        SOXEXTREV = SharedXextRev
      SOXINPUTREV = SharedXinputRev
       SOXTESTREV = SharedXTestRev
       SOXTRAPREV = SharedXTrapRev
         SOPEXREV = SharedPexRev
#endif

#if !SharedLibXext
  DEPEXTENSIONLIB = _UseCat($(USRLIBDIR),$(EXTENSIONSRC)/lib,/libXext.a)
     EXTENSIONLIB = LoaderLibPrefix _Use(-lXext, $(DEPEXTENSIONLIB))
#endif
#if !SharedLibX
          DEPXLIB = $(DEPEXTENSIONLIB) _UseCat($(USRLIBDIR),$(XLIBSRC),/libX11.a)
         XLIBONLY = LoaderLibPrefix _Use(-lX11,$(XLIBSRC)/libX11.a)
             XLIB = $(EXTENSIONLIB) $(XLIBONLY)
#endif
      DEPXAUTHLIB = _UseCat($(USRLIBDIR),$(XAUTHSRC),/libXau.a)
         XAUTHLIB = LoaderLibPrefix _Use(-lXau,$(DEPXAUTHLIB))
      DEPXDMCPLIB = _UseCat($(USRLIBDIR),$(XDMCPLIBSRC),/libXdmcp.a)
         XDMCPLIB = LoaderLibPrefix _Use(-lXdmcp,$(DEPXDMCPLIB))
#if !SharedLibXmu
        DEPXMULIB = _UseCat($(USRLIBDIR),$(XMUSRC),/libXmu.a)
           XMULIB = LoaderLibPrefix _Use(-lXmu,$(DEPXMULIB))
#endif
#if !SharedOldLibX
       DEPOLDXLIB = _UseCat($(USRLIBDIR),$(OLDXLIBSRC),/liboldX.a)
          OLDXLIB = LoaderLibPrefix _Use(-loldX,$(DEPOLDXLIB))
#endif
#if !SharedLibXt
      DEPXTOOLLIB = _UseCat($(USRLIBDIR),$(TOOLKITSRC),/libXt.a)
         XTOOLLIB = LoaderLibPrefix _Use(-lXt,$(DEPXTOOLLIB))
#endif
#if !SharedLibXaw
        DEPXAWLIB = _UseCat($(USRLIBDIR),$(AWIDGETSRC),/libXaw.a)
           XAWLIB = LoaderLibPrefix _Use(-lXaw,$(DEPXAWLIB))
#endif
#if !SharedLibXinput
        DEPXILIB = _UseCat($(USRLIBDIR),$(XILIBSRC),/libXi.a)
           XILIB = LoaderLibPrefix _Use(-lXi,$(DEPXILIB))
#endif
#if !SharedLibXTest
     DEPXTESTLIB = _UseCat($(USRLIBDIR),$(XTESTLIBSRC),/libXtst.a)
        XTESTLIB = LoaderLibPrefix _Use(-lXtst,$(DEPXTESTLIB))
#endif
#if !SharedLibPex
       DEPPEXLIB = _UseCat($(USRLIBDIR),$(PEXLIBSRC),/libPEX5.a)
          PEXLIB = LoaderLibPrefix _Use(-lPEX5,$(DEPPEXLIB))
#endif
#if !SharedLibPhigs
        DEPPHIGSLIB = _UseCat($(USRLIBDIR),$(PHIGSLIBSRC),/libphigs.a)
           PHIGSLIB = LoaderLibPrefix _Use(-lphigs,$(DEPPHIGSLIB))
#endif
       DEPXBSDLIB = _UseCat($(USRLIBDIR),$(LIBSRC)/Berk,/libXbsd.a)
          XBSDLIB = LoaderLibPrefix _Use(-lXbsd,$(DEPXBSDLIB))

 LINTEXTENSIONLIB = _UseCat($(LINTLIBDIR),$(EXTENSIONSRC)/lib,/llib-lXext.ln)
         LINTXLIB = _UseCat($(LINTLIBDIR),$(XLIBSRC),/llib-lX11.ln)
          LINTXMU = _UseCat($(LINTLIBDIR),$(XMUSRC),/llib-lXmu.ln)
        LINTXTOOL = _UseCat($(LINTLIBDIR),$(TOOLKITSRC),/llib-lXt.ln)
          LINTXAW = _UseCat($(LINTLIBDIR),$(AWIDGETSRC),/llib-lXaw.ln)
           LINTXI = _UseCat($(LINTLIBDIR),$(XILIBSRC),/llib-lXi.ln)
          LINTPEX = _UseCat($(LINTLIBDIR),$(PEXLIBSRC),/llib-lPEX5.ln)
        LINTPHIGS = _UseCat($(LINTLIBDIR),$(PHIGSLIBSRC),/llib-lphigs.ln)

#ifndef XawClientDepLibs
#define XawClientDepLibs $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)
#endif
#ifndef XawClientLibs
#define XawClientLibs $(XAWLIB) $(XMULIB) $(XTOOLLIB) $(XLIB)
#endif

#ifndef NeedDefaultDepLibs
#define NeedDefaultDepLibs YES
#endif

#if NeedDefaultDepLibs
/*
 * Individual libraries should override this
 */
#if HasSharedLibraries || UseInstalled
          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)
#else
          DEPLIBS = $(LOCAL_LIBRARIES)
#endif
         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)
#endif /* NeedDefaultDepLibs */

/* */#
/* */# OMRON INPUT MATHOD MAKE ENV
/* */#

#if defined(uniosu) || (defined(SVR4) && !defined(DGUX)) || defined(hpux)
#define termLibrary -lcurses
#define cvtfileDir ./sysV
#else
#define termLibrary -ltermcap
#define cvtfileDir ./bsd
#endif

#define	WnnSpecialObjectRule(obj, depends, direct, define)	@@\
obj : depends							@@\
	$(CC) -c $(CFLAGS) define direct/`basename $@ .o`.c	@@\

#ifdef WnnMakeDirectories
#undef WnnMakeDirectories
#endif
#define WnnMakeDirectories(step,dir)					@@\
step::									@@\
	@case '${MFLAGS}' in *[i]*) set +e;; esac;			@@\
	DirFailPrefix@for i in dir; do if [ -d $(DESTDIR)$$i ]; then \	@@\
		set +x; else (set -x; $(MKDIRHIER) $(DESTDIR)$$i; \	@@\
		chown $(WNNOWNER) $(DESTDIR)$$i); fi \			@@\
	done

#define LinkDiffNameFile(src,dest,dir)					@@\
src:  dir/dest								@@\
	$(RM) $@							@@\
	$(LN) $? $@							@@\

#ifdef MakeMakeSubdirs
#undef MakeMakeSubdirs
#endif
#define MakeMakeSubdirs(dirs,target)					@@\
target::								@@\
	DirFailPrefix@case '${MFLAGS}' in *[ik]*) set +e;; esac; \	@@\
	case '${MFLAGS}' in *n*) executeit="no";; esac; \		@@\
	for i in dirs ;\						@@\
	do \								@@\
		echo "making Makefiles in $(CURRENT_DIR)/$$i..."; \	@@\
		case "$$i" in \						@@\
		./?*/?*/?*/?*)	newtop=../../../../;; \			@@\
		./?*/?*/?*)	newtop=../../../;; \			@@\
		./?*/?*)	newtop=../../;; \			@@\
		./?*)		newtop=../;; \				@@\
		*/?*/?*/?*)	newtop=../../../../;; \			@@\
		*/?*/?*)	newtop=../../../;; \			@@\
		*/?*)		newtop=../../;; \			@@\
		*)		newtop=../;; \				@@\
		esac; \							@@\
		case "$(TOP)" in \					@@\
		/?*) imaketop=  ;; \					@@\
		*) imaketop=$$newtop ;; \				@@\
		esac; \							@@\
		cd $$i; \						@@\
		$(RM) Makefile.bak; \					@@\
		if [ -f Makefile ]; then \				@@\
			echo "	$(MV) Makefile Makefile.bak"; \		@@\
			if [ "$$executeit" != "no" ]; then \		@@\
				$(MV) Makefile Makefile.bak; \		@@\
			fi; \						@@\
		fi; \							@@\
		if [ "$$executeit" != "no" ]; then \			@@\
			ImakeSubCmdHelper -DTOPDIR=$$imaketop$(TOP) -DCURDIR=$(CURRENT_DIR)/$$i; \ @@\
		fi; \							@@\
		$(MAKE) $(MFLAGS) Makefiles; \				@@\
		cd $$newtop; \						@@\
	done

#ifdef ImakeSubCmdHelper
#undef ImakeSubCmdHelper
#endif 

#ifdef UseInstalled
#define ImakeSubCmdHelper $(IMAKE) -DUseInstalled -I$$newtop$(IMIRULESRC) -I$$imaketop$(NEWTOP)$(IRULESRC) -DIMROOT=$$newtop$(IMTOP) $(IMAKE_DEFINES)
#else
#define ImakeSubCmdHelper $$imaketop$(NEWTOP)$(IMAKE) -I$$imaketop$(NEWTOP)$(IMIRULESRC) -I$$imaketop$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)
#endif

#define WnnInstallDicMultiple(list,dest)				@@\
install:: list								@@\
	MakeDir($(DESTDIR)dest)						@@\
	@case '${MFLAGS}' in *[i]*) set +e;; esac;			@@\
	@for i in list; do if [ -f $(DESTDIR)dest/$$i ]; then \	@@\
	set +x; \							@@\
	else (set -x; \							@@\
		$(INSTALL) -c $(INSTALLFLAGS) $$i $(DESTDIR)dest; \	@@\
		$(WNNTOUCH) $(DESTDIR)dest/$$i); fi \			@@\
	done

#ifndef BuildWnn
#define BuildWnn	YES
#endif
#ifndef BuildCWnn
#define BuildCWnn	YES
#endif
#ifndef BuildKWnn
#define BuildKWnn	YES
#endif
#ifndef BuildXwnmo
#define BuildXwnmo	YES
#endif

#ifndef BuildJserver
#define BuildJserver	YES
#endif
#ifndef BuildJlib
#define BuildJlib	YES
#endif
#ifndef BuildWnnClients
#define BuildWnnClients	YES
#endif
#ifndef BuildWnnDicUtil
#define BuildWnnDicUtil	YES
#endif
#ifndef BuildPubdic
#define BuildPubdic	YES
#endif
#ifndef BuildWnnConsDic
#define BuildWnnConsDic	YES
#endif
#ifndef BuildWnnMan
#define BuildWnnMan	YES
#endif
#ifndef BuildJlibV3
#define BuildJlibV3	NO
#endif
#if BuildPubdic || BuildWnnConsDic
#define BuildWnnDicUtilForCompile	YES
#else
#define BuildWnnDicUtilForCompile	NO
#endif

#ifndef BuildCserver
#define BuildCserver	YES
#endif
#ifndef BuildTserver
#define BuildTserver	YES
#endif
#ifndef BuildCJlib
#define BuildCJlib	YES
#endif
#ifndef BuildCWnnClients
#define BuildCWnnClients	YES
#endif
#ifndef BuildCWnnDicUtil
#define BuildCWnnDicUtil	YES
#endif
#ifndef BuildCDic
#define BuildCDic	YES
#endif
#ifndef BuildTDic
#define BuildTDic	YES
#endif
#if BuildCDic || BuildTDic
#define BuildCWnnDicUtilForCompile	YES
#else
#define BuildCWnnDicUtilForCompile	NO
#endif

#ifndef BuildKserver
#define BuildKserver	YES
#endif
#ifndef BuildKJlib
#define BuildKJlib	YES
#endif
#ifndef BuildKWnnClients
#define BuildKWnnClients	YES
#endif
#ifndef BuildKWnnDicUtil
#define BuildKWnnDicUtil	YES
#endif
#ifndef BuildKDic
#define BuildKDic	YES
#endif
#if BuildKDic
#define BuildKWnnDicUtilForCompile	YES
#else
#define BuildCWnnDicUtilForCompile	NO
#endif

/*
 * If you want to install dictionaries forcibly, set WnnInstallDicForcibly
 * as YES. Default is that dictionary isn't installed if it exist already.
 */

       WNNOWNER = wnn
#ifdef UseInstalled
          IMTOP = IMROOT
#else
          IMTOP = $(CONTRIBSRC)/im/Xsi
#endif
      WNNWNNDIR = /usr/local/lib/wnn
      WNNBINDIR = /usr/local/bin
      WNNINCDIR = $(INCROOT)
      WNNLIBDIR = $(USRLIBDIR)
    WNNTERM_LIB = termLibrary

      PUBDICSRC = $(IMTOP)/Pubdic
  WNNCONSDICSRC = $(IMTOP)/Wnn-consortium/dic

         WNNTOP = $(IMTOP)/Wnn
       JWNNLANG = ja_JP
     JWNNWNNDIR = $(WNNWNNDIR)/$(JWNNLANG)
     JWNNBINDIR = $(WNNBINDIR)/Wnn4
     JWNNINCDIR = $(WNNINCDIR)/wnn
     JWNNDICDIR = $(JWNNWNNDIR)/dic
  JWNNPUBDICDIR = $(JWNNDICDIR)/pubdic
JWNNWNNCONSDICDIR = $(JWNNDICDIR)/wnncons
  JWNNFZKSRCDIR = $(JWNNDICDIR)/src
     WNNCONVSRC = $(WNNTOP)/conv
      WNNETCSRC = $(WNNTOP)/etc
  WNNINCLUDESRC = $(WNNTOP)/include
       WNNJDSRC = $(WNNTOP)/jd
     WNNJLIBSRC = $(WNNTOP)/jlib
   WNNJLIBV3SRC = $(WNNTOP)/jlib.V3
  WNNJSERVERSRC = $(WNNTOP)/jserver
    WNNJUTILSRC = $(WNNTOP)/jutil
       WNNLDSRC = $(WNNTOP)/ld
   WNNPUBDICSRC = $(WNNTOP)/pubdic
WNNWNNCONSSRC = $(WNNTOP)/wnncons
WNNWNNCONSDICSRC = $(WNNWNNCONSSRC)/dic
   WNNROMKANSRC = $(WNNTOP)/romkan
      WNNUUMSRC = $(WNNTOP)/uum
   WNNCNVFILEDIR = $(WNNJDSRC)/cvtfileDir
    WNNINCLUDES = -I$(WNNINCLUDESRC) -I$(WNNROMKANMSRC)
     WNNDEFINES = -DLIBDIR=\"$(WNNWNNDIR)\"
        WNNJLIB = $(WNNJLIBSRC)/libwnn.a
     WNNCONVLIB = $(WNNCONVSRC)/libconvkey.a

        CWNNTOP = $(IMTOP)/cWnn
       CWNNLANG = zh_CN
     CWNNWNNDIR = $(WNNWNNDIR)/$(CWNNLANG)
     CWNNINCDIR = $(WNNINCDIR)/cwnn
     CWNNBINDIR = $(WNNBINDIR)/cWnn4
     CWNNDICDIR = $(CWNNWNNDIR)/dic
  CWNNSYSDICDIR = $(CWNNDICDIR)/sys
      CWNNCDSRC = $(CWNNTOP)/cd
    CWNNCDICSRC = $(CWNNTOP)/cdic
    CWNNCONVSRC = $(CWNNTOP)/conv
     CWNNETCSRC = $(CWNNTOP)/etc
 CWNNINCLUDESRC = $(CWNNTOP)/include
    CWNNJLIBSRC = $(CWNNTOP)/jlib
 CWNNJSERVERSRC = $(CWNNTOP)/jserver
   CWNNJUTILSRC = $(CWNNTOP)/jutil
  CWNNROMKANSRC = $(CWNNTOP)/romkan
     CWNNUUMSRC = $(CWNNTOP)/uum
 CWNNCNVFILEDIR = $(CWNNCDSRC)/cvtfileDir
   CWNNINCLUDES = -I$(CWNNINCLUDESRC) -I$(CWNNROMKANMSRC)
    CWNNDEFINES = -DLIBDIR=\"$(WNNWNNDIR)\"
       CWNNJLIB = $(CWNNJLIBSRC)/libcwnn.a
    CWNNCONVLIB = $(CWNNCONVSRC)/libconvkey.a

        KWNNTOP = $(IMTOP)/kWnn
       KWNNLANG = ko_KR
     KWNNWNNDIR = $(WNNWNNDIR)/$(KWNNLANG)
     KWNNINCDIR = $(WNNINCDIR)/kwnn
     KWNNBINDIR = $(WNNBINDIR)/kWnn4
     KWNNDICDIR = $(KWNNWNNDIR)/dic
  KWNNSYSDICDIR = $(KWNNDICDIR)/sys
      KWNNKDSRC = $(KWNNTOP)/kd
    KWNNKDICSRC = $(KWNNTOP)/kdic
    KWNNCONVSRC = $(KWNNTOP)/conv
     KWNNETCSRC = $(KWNNTOP)/etc
 KWNNINCLUDESRC = $(KWNNTOP)/include
    KWNNJLIBSRC = $(KWNNTOP)/jlib
 KWNNJSERVERSRC = $(KWNNTOP)/jserver
   KWNNJUTILSRC = $(KWNNTOP)/jutil
  KWNNROMKANSRC = $(KWNNTOP)/romkan
     KWNNUUMSRC = $(KWNNTOP)/uum
 KWNNCNVFILEDIR = $(KWNNCDSRC)/cvtfileDir
   KWNNINCLUDES = -I$(KWNNINCLUDESRC) -I$(KWNNROMKANMSRC)
    KWNNDEFINES = -DLIBDIR=\"$(WNNWNNDIR)\"
       KWNNJLIB = $(KWNNJLIBSRC)/libkwnn.a
    KWNNCONVLIB = $(KWNNCONVSRC)/libconvkey.a

       TWNNLANG = zh_TW
     TWNNWNNDIR = $(WNNWNNDIR)/$(TWNNLANG)
     TWNNDICDIR = $(TWNNWNNDIR)/dic
  TWNNSYSDICDIR = $(TWNNDICDIR)/sys
      TWNNTDSRC = $(CWNNTOP)/td
    TWNNTDICSRC = $(CWNNTOP)/tdic

       LWNNLANG = lt_LN
     LWNNWNNDIR = $(WNNWNNDIR)/$(LWNNLANG)

     WNNLANGDEF = -DJAPANESE
    CWNNLANGDEF = -DCHINESE
    TWNNLANGDEF = -DTAIWANESE
    KWNNLANGDEF = -DKOREAN
    LWNNLANGDEF = -DLATIN
     ALLLANGDEF = $(WNNLANGDEF) $(CWNNLANGDEF) $(KWNNLANGDEF) $(LWNNLANGDEF)

       XWNMOTOP = $(IMTOP)/Xwnmo
       XWNMOSRC = $(XWNMOTOP)/xwnmo
      XJUTILSRC = $(XWNMOTOP)/xjutil
 XWNMOROMKANSRC = $(XWNMOTOP)/romkan
   XWNMOJLIBSRC = $(XWNMOTOP)/jlib
     XWNMOJDSRC = $(XWNMOTOP)/jd
XWNMOROMKANMSRC = $(XWNMOTOP)/romkan_m
#ifdef UseInstalled
  XWNMOXLIBINC  = -I$(TOP)/include/X11/mit
#else
  XWNMOXLIBINC  = -I$(XLIBSRC)
#endif
  XWNMOINCLUDES = -I$(XWNMOROMKANMSRC) -I$(WNNINCLUDESRC) $(XWNMOXLIBINC)
      XWNMOJLIB = $(XWNMOJLIBSRC)/libwnn_m.a
 XWNMOLIBRARIES = $(XWNMOJLIB)

       XWNMODEF = -DX11R5

     IMIRULESRC = $(IMTOP)/configR5

#ifdef UseInstalled
      IMAKE_CMD = $(NEWTOP)$(IMAKE) -DUseInstalled -I$(NEWTOP)$(IMIRULESRC) \
			-I$(NEWTOP)$(IRULESRC) -DIMROOT=$(IMTOP) $(IMAKE_DEFINES)
#else
      IMAKE_CMD = $(NEWTOP)$(IMAKE) -I$(NEWTOP)$(IMIRULESRC) \
			-I$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)
#endif
