.\"
.\"   $Id: uumkey.man,v 1.3 2001/06/14 18:08:32 ura Exp $
.\"
.\"
.\" FreeWnn is a network-extensible Kana-to-Kanji conversion system.
.\" This file is part of FreeWnn.
.\" 
.\" Copyright Kyoto University Research Institute for Mathematical Sciences
.\"                 1987, 1988, 1989, 1990, 1991, 1992
.\" Copyright OMRON Corporation. 1987, 1988, 1989, 1990, 1991, 1992, 1999
.\" Copyright ASTEC, Inc. 1987, 1988, 1989, 1990, 1991, 1992
.\" Copyright FreeWnn Project 1999, 2000
.\" 
.\" Maintainer:  FreeWnn Project   <freewnn@tomo.gr.jp>
.\" 
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\" 
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\" 
.\" You should have received a copy of the GNU General Public License
.\" along with this program; if not, write to the Free Software
.\" Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
.\"
.TH UUMKEY 5  "28 January 1992" 
.SH 名称
.sv 1
.nf
.ta 0.1i 2i
uumkey		かな漢字変換フロントエンドプロセッサ(uum(1))キーバインド定義ファイル
.fi
.SH 形式
.sv 1
.nf
.ta 0.1i 3i 
/usr/local/lib/wnn/ja_JP/uumkey (デフォルト)
.fi
.SH 機能
.HP 0
.IP
uumkey は、日本語入力時のキーの設定ファイルである。
各ユーザが uumkey を設定することで、ユーザ独自のキー操作が可能である。
\';' あるいは':'で始まる行は、コメントになる。
.SH 機能外エントリ
.HP 0
.IP
.TP 8
include <uumkeyファイル名>
指定されたファイルを基にキーバインド設定を行う。これと、二重に
設定した時には後のものを優先する。
例えば、デフォルトの uumkey の１部だけを変更して使いたい時、
デフォルトの uumkey を include してから異なる部分だけを書けば良い。
.TP 8
unset <機能エントリ名>
指定エントリに対する既設定を取り除く。
.SH 機能エントリ設定形式
.HP 0
.IP
機能名    キーコード  [キーコード ....]

キーコードの表記の仕方は、8進、10進、16進数が使用でき C のそれに準じる。
また、コントロールコードについては、次のような略記法が使用できる。

  CTRL A   --->  ^A

henkan_off の機能だけは、一つのキーコードに対してしかセット出来ない。その他は、
１つの機能に対してコードを最大10個まで書くことが出来る。
同じ機能を２度セットした場合には後のものが優先される。即ち、１つの機能を複数の
キーにバインドする時は、１度に設定しなくてはならない。ただし、同じモードで作動
する複数の機能を同じキーにバインドすることはできない。この条件の元で１つのキー
に複数の機能をバインドすることができる。
.SH 機能エントリ
.HP 0
.IP
uum には、以下に挙げる１０個のモードがある。各機能エントリ名の右にある数字は、
その機能が作用するモード番号を表わしている。モードによって機能が異なる場合は、

 モードを表す数字列 : 機能説明

として、モードごとの機能を説明している。

  0: 変換後の変換結果を修正しているモード
  1: 変換前の文字を入力しているモード
  2: 変換後に文節の長さを伸ばしたり、縮めたりしているモード
  3: バッファーに何も文字が入っていないモード
  4: カーソルを動かしながら、何か候補を選択する時のモード(すなわち、
次候補選択や、ユーティリティーモード、登録時の品詞や辞書を選択する時のモード)
  5: 単語登録時に、漢字の範囲を設定している時のモード
  6: 単語登録時の読み入力や、辞書追加の時の辞書名などの文字列を入力している
時のモード
  7: 単語検索のモード
  8: 辞書検索のモード
  9:インスペクトのモード

エントリ名の最後に "_e" が付いたエントリは、"_e" が付いていない同じ名前の
エントリと同じ機能がバッファーが空の状態(モード 3)においても作動する。
rubout の働きをするキーの設定は、 uum を起動した tty の erase 文字の設定に従う。

以下に設定できるエントリ名とその機能を説明する。

.TP 8
henkan_on               0123456789
変換モードの on/off を変更する。
変換モード、uum のモードに関わらずバインドされる。
.TP 8
quote_keyin             0123456789
次の入力文字をクオートする。変換モード変更文字も対象になる。
変換モード、uum のモードに関わらずバインドされる。
henkan_on にバインドされたコードを入力するための非常手段として
用意されている。
.TP 8
send_string             012
変換行内の文字列に、この機能がバインドされているコードを付け
加えた文字列を、アプリケーションに送る。
.TP 8
kakutei         012
変換行内の文字列をアプリケーションに送る。
.TP 8
forward_char            01256
156 : １文字右へ進む。
0 : １文節右へ進む。
2 : 反転している部分を仮名のままにして、それ以降を連文節変換
して、一つ右の文節に移る。
.TP 8
backward_char           01256
1 : １文字左へ戻る。だたし、一度変換して途中から解除してあ
る状態で、カーソルが解除してある部分の一番左にある状態で
この機能が呼ばれると、連文節変換をしてから一つ左の文節に
移る。
56 : １文字左へ戻る。
0 : １文節左へ戻る。
2 : 反転している部分を仮名のままにして、それ以降を連文節変換
して、一つ左の文節に移る。
.TP 8
goto_top_of_line        01256
1256 : 行の先頭の文字へとぶ。
0 :  行の先頭の文節へとぶ。
.TP 8
goto_end_of_line        01256
1256 : 行の後端の文字へとぶ。
0 :  行の後端の文節へとぶ。
.TP 8
delete_char_at_cursor           156
カーソルの位置の文字消去。
.TP 8
kaijo           02
注目している文節以降の変換された文字列を、変換される前の状態に
戻す。
.TP 8
henkan          1
連文節変換を行う。
.TP 8
tan_henkan      1
小文節１文節として単文節変換を行う。
.TP 8
tan_henkan_dai  1
大文節１文節として単文節変換を行う。
.TP 8
nobi_henka      2
文節の伸ばして縮みをしている時には、反転している部分を小文節とし
て単文節変換して、それ以降を連文節変換する。
.TP 8
nobi_henka_dai  2
文節の伸ばして縮みをしている時に、反転している部分を大文節とし
て単文節変換して、それ以降を連文節変換する。
.TP 8
jikouho         0
小文節として次候補を出す。
.TP 8
jikouho_dai             0
大文節として次候補を出す。
.TP 8
zenkouho        0
小文節として前候補を出す。
.TP 8
zenkouho_dai    0
大文節として前候補を出す。
.TP 8
select_jikouho          0
小文節として次候補一覧を出す。
.TP 8
select_jikouho_dai      0
大文節として次候補一覧を出す。
.TP 8
kana_henkan     1
漢字かな変換を行なう。
.TP 8
kill            156
カーソル以降（カーソル位置を含む）の文字列を消去して、キルバッ
ファーに蓄える。
.TP 8
yank            156
.TP 8
yank_e          1356
キルバッファーの内容を、カーソルの位置に挿入する。
.TP 8
bunsetu_nobasi          02
文節の長さを１文字長くする。
.TP 8
bunsetu_chijime         02
文節の長さを１文字短くする。
.TP 8
jisho_utility           012
.TP 8
jisho_utility_e         0123
辞書関係の操作を行うモードに入る。
.TP 8
touroku         012
.TP 8
touroku_e       0123
単語登録を行うモードに入る。
.TP 8
sainyuuryoku            1
.TP 8
sainyuuryoku_e          13
前に入力されたかな文字列に置き換える。
.TP 8
kuten           156
.TP 8
kuten_e         1356
区点入力を行うモードに入る。
.TP 8
jis             156
.TP 8
jis_e           1356
ＪＩＳコード入力を行うモードに入る。
.TP 8
redraw_line             012456789
.TP 8
redraw_line_e           0123456789
変換行の書き直しを行う。
.TP 8
previous_history                1
.TP 8
previous_history_e              13
ヒストリに蓄えられている１つ前の文字列に置き換える。
.TP 8
next_history            1
.TP 8
next_history_e          13
ヒストリに蓄えられている１つ後の文字列に置き換える。
.TP 8
touroku_mark_set        5
登録時に、登録する文字列の始まりの位置及び、終わりの位置を
指定する。なお、終わりの位置を始めの位置と同じ場所で指定し
た時(即ち、長さ0で指定した時)は、登録の始まり位置を指定する
モードに戻る。
.TP 8
touroku_return          6
登録時の読みなどの文字列を入力している時に、文字列入力の
終わりを示す。
.TP 8
quit            456789
変換文字列を入力したり、変換したりする以外のモードにはいっ
ている時、(次候補一覧や、登録など、モード4、5、6、7、8、9)
そのモードから抜ける。
.TP 8
touroku_jump_forward            5
登録時に、カーソルを一文節だけ先に飛ばす。
.TP 8
touroku_jump_backward           5
登録時に、カーソルを一文節だけ後ろに飛ばす。
.TP 8
change_to_insert_mode           0
変換された文字列を、もう一度編集できる状態にする。
この後、変換された漢字は、かなには戻せない。
.TP 8
quote           1
.TP 8
quote_e         13
次の入力文字が、henkan_on 以外の文字なら、それを quote する。
即ち、次の入力文字を、ローマ字かな変換に通さずに、バインド
されている機能があってもそれを呼ばずに変換行に入れる。
.TP 8
forward_select          4789
4 : 次候補など候補を選択するモードで、反転部分を右に動かす。
789 : 辞書検索などの時に、１行に入らない場合に、スクロールする。
.TP 8
backward_select         4789
4 : 候補を選択するモードで、反転部分を左に動かす。
789 : 辞書検索などの時に、１行に入らない場合に、逆スクロールする。
.TP 8
next_select             4789
4 : 次候補など候補を選択するモードで、次の画面に移る。
789 : 辞書検索などの時に、次の行に移る。
.TP 8
previous_select         4789
4 : 次候補など候補を選択するモードで、前の画面に移る。
789 : 辞書検索などの時に、前の行に移る。
.TP 8
linestart_select        4789
4 : 次候補など候補を選択するモードで、画面の先頭に移る。
789 : 辞書検索などの時に、一行に入らない場合に最初の画面に移る。
.TP 8
lineend_select          4789
4 : 次候補など候補を選択するモードで、画面の最後に移る。
789 : 辞書検索などの時に、一行に入らない場合に最後の画面に移る。
.TP 8
select_select           4789
4 : 次候補など候補を選択するモードで、どれか候補を選んでその
モードから抜ける。
789 : 辞書検索などの時に、どれか候補を選んでそのモードから抜ける。
.TP 8
send_ascii_char         0123456789
それ以降バッファが空の時にアスキ文字が入力された時に、それ
をバッファに取らないようにする。
.TP 8
not_send_ascii_char             0123456789
それ以降バッファが空の時にアスキ文字が入力された時に、それ
をバッファに取るようにする。
.TP 8
pop_send_ascii_char             0123456789
それ以降バッファが空の時にアスキ文字が入力された時の動作を
前の状態に戻す。
.TP 8
toggle_send_ascii_char          0123456789
それ以降バッファが空の時に ascii 文字が入力された時の動作を
その時の動作と反対にする。
.TP 8
quote_send_ascii_char           3
.TP 8
send_ascii_char モードの時で、バッファが空の時に次の ascii 文字
をバッファに取る。
それ以降のバッファが空の時にはバッファに取らないようにする。
.TP 8
reconnect_jserver               012456789
jserver との再接続を行う。
.TP 8
inspect                 0
辞書引きを行う。
.TP 8
sakujo_kouho            0
候補の削除を行う。
.TP 8
del_entry               78
辞書のエントリ,辞書を削除する。
.TP 8
use_entry               78
辞書のエントリ,辞書の使用を中止/再開する。
.TP 8
hindo_set               7
辞書のエントリの頻度を数値で設定する。
.TP 8
ima_bit                 7
辞書のエントリの今使ったよビットをON/OFFする。
.SH 設定例
.HP 0
.IP
  ; Commands                  Codes

  forward_char                ^F 0x90
  jikouho                     ^N 0x92 ^W 0x9E
  ;yank                       ^Y
  yank_e                      ^Y
  select_select               32 ^J ^M 0x9E 0x9F
.SH 使用上の注意事項
.HP 0
.IP
変換モード OFF とは一時的に uum を切り離したのと同じ効果を上げるもので、
ローマ字かな変換オートマトンも同時に切り離される。
コードとして取ることのできる数は、0以上256未満の整数で、表記法については
上に述べた通り。これには、キーボードで発生できるものと、そうでないものと
があるが、発生できるものはそのままコードを書くことができる。
発生できないもの(128以上の整数等)を使用する場合は、キーコード変換
(cvt_key_tbl(4)、あるいはローマ字かな変換オートマトンでそのコードを
発生させる必要がある。

henkan_on エントリに設定するコードには、キーコード変換の出力コードは書けない。
.SH 関連項目
.sv 1
.nf
uum(1), uumrc(5), cvt_key_tbl(5), オートマトン(3)
