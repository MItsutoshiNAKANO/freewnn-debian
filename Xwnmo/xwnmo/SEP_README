/*
 * $Id: SEP_README,v 1.1.2.1 1999/02/08 08:08:35 yamasita Exp $
 */

/*
 * FreeWnn is a network-extensible Kana-to-Kanji conversion system.
 * This file is part of FreeWnn.
 * 
 * Copyright Kyoto University Research Institute for Mathematical Sciences
 *                 1987, 1988, 1989, 1990, 1991, 1992
 * Copyright OMRON Corporation. 1987, 1988, 1989, 1990, 1991, 1992, 1999
 * Copyright ASTEC, Inc. 1987, 1988, 1989, 1990, 1991, 1992
 *
 * Author: OMRON SOFTWARE Co., Ltd. <freewnn@rd.kyoto.omronsoft.co.jp>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with GNU Emacs; see the file COPYING.  If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 * Commentary:
 *
 * Change log:
 *
 * Last modified date: 8,Feb.1999
 *
 */
	SEP - SpotLocation Extended Protocol

SEP is a protocol realizes quickly movement of spot location.

Normaly, operation of cursor movement in appications follows:
	nested_list = XVaCreateNestedList(dummy, XNSpotLocation, spot NULL);
	XSetICValues(ic, XNPreeditAttributes, nested_list, NULL);
	XFree(dpy, nested_list);
Applications like terminal emulators must move cursor frequently, thence 
this operation causes applications a great deal of performance down.
SEP solves this problem. Applications use SEP or call only the following
function:
	_XipChangeSpot(ic, spot_x, spot_y);

For feather infomation about _XipChangeSpot(), please see SEP part of
man of xwnmo.

.

-------------------------------------------------------------------------
Communicating data using socket between XIMlibrary and XWNMO.

    Request Encording
     # of Bytes	Values			Description
    XIM -> XWNMO (ximChangeSpotReq)
	    1	XIM_ChangeSpot(20)	Req type
	    1				unused
	    2	12			length of this data
	    4	CARD32			xic
	    2	INT16			spot location x
	    2	INT16			spot location y

    Reply Encording
     # of Bytes	Values			Description
    XIM <- XWNMO (sz_ximEventReply)
	    2				Reply
		0			 success
					 failed
	    6				unused

